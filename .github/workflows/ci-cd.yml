name: CI/CD Pipeline (EC2 Free Tier)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      ecr_registry: ${{ steps.login-ecr.outputs.registry }}

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test || echo "No tests specified"

    - name: Login to Amazon ECR
      id: login-ecr
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Build, tag, and push image to Amazon ECR
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: mern-app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  terraform:
    name: Terraform Infra Check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    - name: Terraform Validate
      working-directory: terraform
      run: terraform validate

    - name: Terraform Plan (Dry Run Infra Check)
      working-directory: terraform
      run: terraform plan

  deploy:
    needs: [build, terraform]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Deploy to EC2 via SSH
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
        ECR_REGISTRY: ${{ needs.build.outputs.ecr_registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
        chmod 400 ec2_key.pem

        ssh -o StrictHostKeyChecking=no -i ec2_key.pem $EC2_USER@$EC2_HOST << EOF
          docker login -u AWS -p $(aws ecr get-login-password --region ${{ secrets.AWS_REGION }}) $ECR_REGISTRY
          docker pull $ECR_REGISTRY/mern-app:$IMAGE_TAG
          docker stop mern-app || true
          docker rm mern-app || true
          docker run -d --name mern-app -p 80:3000 $ECR_REGISTRY/mern-app:$IMAGE_TAG
        EOF

        rm ec2_key.pem
